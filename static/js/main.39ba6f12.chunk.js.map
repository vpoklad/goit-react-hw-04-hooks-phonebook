{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactsForm/ContactsForm.module.css","hooks/useLocalStorage.js","components/ContactsForm/ContactsForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/ContactList/Filter.js","App.js","index.js"],"names":["module","exports","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","ContactsForm","addNewContact","name","setName","number","setNumber","handleInput","e","value","target","className","s","form","onSubmit","preventDefault","newContact","id","uuid","label","htmlFor","onChange","type","pattern","title","required","Button","variant","size","endIcon","ContactItem","contact","handleDelItem","item","IconButton","onClick","ContactList","contacts","map","Filter","handlChange","TextField","defaultContats","App","setContacts","filter","setFilter","some","el","toLowerCase","alert","prev","toLocaleLowerCase","includes","filteredItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,4B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,MAAQ,8B,yHCW7CC,EAXS,SAACC,EAAKC,GAC5B,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOO,EAAP,KAAcC,EAAd,KAOA,OAJAC,qBAAU,WACRL,OAAOC,aAAaK,QAAQX,EAAKG,KAAKS,UAAUJ,MAC/C,CAACR,EAAKQ,IAEF,CAACA,EAAOC,I,2DCFF,SAASI,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,cAIrC,EAAwBZ,mBAAS,IAAjC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAA4Bd,mBAAS,IAArC,mBAAOe,EAAP,KAAeC,EAAf,KAOMC,EAAc,SAAAC,GAClB,IAAMC,EAAQD,EAAEE,OAAOD,MAEvB,OADaD,EAAEE,OAAOP,MAEpB,IAAK,OACHC,EAAQK,GACR,MACF,IAAK,SACHH,EAAUG,GACV,MACF,QACE,SAgBN,OACE,uBAAME,UAAWC,IAAEC,KAAMC,SAbN,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,EAAa,CACjBC,GAAIC,cACJf,OACAE,UAGFH,EAAcc,GA3BdZ,EAAQ,IACRE,EAAU,KA+BV,UACE,wBAAOK,UAAWC,IAAEO,MAAOC,QAAQ,OAAnC,iBAEE,uBACEC,SAAUd,EACVU,GAAG,OACHK,KAAK,OACLnB,KAAK,OACLM,MAAON,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,wBAAOL,QAAQ,SAAST,UAAWC,IAAEO,MAArC,mBAEE,uBACEE,SAAUd,EACVU,GAAG,SACHR,MAAOJ,EACPiB,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRL,KAAK,SACLM,KAAK,QACLC,QAAS,cAAC,IAAD,IAJX,4B,+CCvES,SAASC,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAC7C,OACE,qBAAIrB,UAAWC,IAAEqB,KAAjB,UACE,iCACGF,EAAQ5B,KADX,KACkB,+BAAO4B,EAAQ1B,YAEjC,cAAC6B,EAAA,EAAD,CACE,aAAW,SACXjB,GAAIc,EAAQd,GACZkB,QAAS,kBAAMH,EAAcD,EAAQd,KAHvC,SAKE,cAAC,IAAD,SCZO,SAASmB,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,SAAUL,EAAiB,EAAjBA,cAC9C,OACE,qCACE,oBAAIrB,UAAWC,IAAEY,MAAjB,sBACA,6BACGa,EAASC,KAAI,SAAAP,GAAO,OACnB,cAACD,EAAD,CAEEC,QAASA,EACTC,cAAeA,GAFVD,EAAQd,Y,aCRV,SAASsB,EAAT,GAA+C,IAAD,IAA5B9B,aAA4B,MAApB,IAAoB,EAAf+B,EAAe,EAAfA,YAC5C,OACE,mCACE,cAACC,EAAA,EAAD,CACExB,GAAG,kBACHE,MAAM,wBACNG,KAAK,SACLK,QAAQ,WACRlB,MAAOA,EACPY,SAAUmB,MCLlB,IAAME,EAAiB,CACrB,CAAEzB,GAAI,OAAQd,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEY,GAAI,OAAQd,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEY,GAAI,OAAQd,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEY,GAAI,OAAQd,KAAM,iBAAkBE,OAAQ,cA2CjCsC,MAzCf,WACE,MAAgCxD,EAAgB,YAAauD,GAA7D,mBAAOL,EAAP,KAAiBO,EAAjB,KAEA,EAA4BtD,mBAAS,IAArC,mBAAOuD,EAAP,KAAeC,EAAf,KA4BA,OACE,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,uBACA,cAACV,EAAD,CAAcC,cA7BlB,SAAsB6B,GAIpB,GAHqBM,EAASU,MAC5B,SAAAC,GAAE,OAAIA,EAAG7C,KAAK8C,gBAAkBlB,EAAQ5B,KAAK8C,iBAG7C,OAAOC,MAAM,+BAEbN,GAAY,SAAAO,GAAI,4BAAQA,GAAR,CAAcpB,UAuB9B,cAACQ,EAAD,CAAQ9B,MAAOoC,EAAQL,YAnB3B,SAA2BhC,GACzBsC,EAAUtC,EAAEE,OAAOD,UAmBjB,cAAC2B,EAAD,CAAaC,SAfRA,EAASQ,QAAO,SAAAd,GAAO,OAC5BA,EAAQ5B,KAAKiD,oBAAoBC,SAASR,EAAOI,kBAcRjB,cAV7C,SAAuBf,GACrB,IAAMqC,EAAejB,EAASQ,QAAO,SAAAd,GAAO,OAAIA,EAAQd,KAAOA,KAC/D2B,EAAYU,U,MClChBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.39ba6f12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3OHNt\",\"item\":\"ContactList_item__2r7km\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__1pHDo\",\"label\":\"ContactsForm_label__2ZJtx\"};","import { useState, useEffect } from 'react';\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport s from './ContactsForm.module.css';\n\nexport default function ContactsForm({ addNewContact }) {\n  // static propTypes = {\n  //   addNewContact: PropTypes.func,\n  // };\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleInput = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n    // this.setState({ [name]: e.target.value });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    addNewContact(newContact);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name\n        <input\n          onChange={handleInput}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label htmlFor=\"number\" className={s.label}>\n        Number\n        <input\n          onChange={handleInput}\n          id=\"number\"\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        size=\"small\"\n        endIcon={<SendIcon />}\n      >\n        Add contact\n      </Button>\n      {/* <button type=\"submit\">Add contact</button> */}\n    </form>\n  );\n}\n\nContactsForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n};\n","import IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default function ContactItem({ contact, handleDelItem }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span>\r\n        {contact.name}: <span>{contact.number}</span>\r\n      </span>\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        id={contact.id}\r\n        onClick={() => handleDelItem(contact.id)}\r\n      >\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  handleDelItem: PropTypes.func,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\nexport default function ContactList({ contacts, handleDelItem }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <ul>\r\n        {contacts.map(contact => (\r\n          <ContactItem\r\n            key={contact.id}\r\n            contact={contact}\r\n            handleDelItem={handleDelItem}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  handleDelItem: PropTypes.func,\r\n};\r\n","import TextField from '@mui/material/TextField';\r\nimport PropTypes from 'prop-types';\r\nexport default function Filter({ value = ' ', handlChange }) {\r\n  return (\r\n    <>\r\n      <TextField\r\n        id=\"standard-search\"\r\n        label=\"Find contacts by name\"\r\n        type=\"search\"\r\n        variant=\"standard\"\r\n        value={value}\r\n        onChange={handlChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  handlChange: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport ContactsForm from './components/ContactsForm/ContactsForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/ContactList/Filter';\n\nconst defaultContats = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contatcts', defaultContats);\n  // const [contacts, setContacts] = useState(()=>defaultContats)\n  const [filter, setFilter] = useState('');\n\n  function onSubmitForm(contact) {\n    const existContact = contacts.some(\n      el => el.name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (existContact) {\n      return alert(`this contact already exists`);\n    } else {\n      setContacts(prev => [...prev, contact]);\n    }\n  }\n\n  function handlFilterChange(e) {\n    setFilter(e.target.value);\n  }\n\n  function filterContacts() {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filter.toLowerCase()),\n    );\n  }\n\n  function handleDelItem(id) {\n    const filteredItem = contacts.filter(contact => contact.id !== id);\n    setContacts(filteredItem);\n  }\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"appTitle\">Phonebook</h1>\n      <ContactsForm addNewContact={onSubmitForm} />\n      <Filter value={filter} handlChange={handlFilterChange} />\n      <ContactList contacts={filterContacts()} handleDelItem={handleDelItem} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}